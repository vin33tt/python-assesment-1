# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FvC_en_9xMUVgFVqvfDlZtIoRO2lBIzB
"""

#1
import numpy as np
import pandas as pd
df = pd.read_excel('/content/Walmart_Dataset Python_Final_Assessment.xlsx')
df.info()
print("Basic Informations are :")
print(df.info())
print("\nSummary Statistics for Numerical Columns are:")
print(df.describe())
print("\nMissing Values are:")
print(df.isnull().sum())
print("\nData Types are:")
print(df.dtypes)

#2
print("\nMissing Values:")
print(df.isnull().sum())
df.dropna(inplace=True)
print("\n Number of duplicate entries before removal are :", df.duplicated().sum())
df.drop_duplicates(inplace=True)
print(" Number of duplicate entries after removal are:", df.duplicated().sum())

#3
n = df.select_dtypes(include=['int64', 'float64'])
m = n.mean()
md = n.median()
mod = n.mode().iloc[0]
r = n.max() - n.min()
v = n.var()
stdv = n.std()
analysis_df_vineet = pd.DataFrame({
    'Mean': m,
    'Median': md,
    'Mode': mod,
    'Range': r,
    'Variance': v,
    'Standard Deviation': stdv
})
print(analysis_df_vineet)

#4
!pip install matplotlib seaborn
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))
sns.histplot(df['Sales'], bins=20, kde=True, color='blue', alpha=0.7)
plt.title('Distribution of Sales')
plt.xlabel('Sales')
plt.ylabel('Frequency')
plt.show()
plt.figure(figsize=(10, 6))
sns.boxplot(x='Sales', data=df, color='skyblue')
plt.title('Box Plot of Sales')
plt.xlabel('Sales')
plt.show()
plt.figure(figsize=(12, 6))
category_counts = df['Category'].value_counts()
sns.barplot(x=category_counts.index, y=category_counts.values, palette='viridis')
plt.title('Bar Chart of Product Categories')
plt.xlabel('Category')
plt.ylabel('Count')
plt.xticks(rotation=45, ha='right')
plt.show()

#5
correlation_matrix = df.corr()
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", linewidths=.5)
plt.title('Correlation Heatmap')
plt.show()

#6
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(10, 6))
sns.boxplot(data=df[['Sales', 'Quantity', 'Profit']])
plt.title('Boxplot of Sales, Quantity, and Profit')
plt.xlabel('Variables')
plt.ylabel('Values')
plt.show()
from scipy.stats import zscore
z_scores = zscore(df[['Sales', 'Quantity', 'Profit']])
threshold = 3
outliers_df = df[(np.abs(z_scores) > threshold).any(axis=1)]
print("Outliers:")
print(outliers_df)

#7(i)
df['Order Date'] = pd.to_datetime(df['Order Date'])
df['Year'] = df['Order Date'].dt.year
sales_profit_trend = df.groupby('Year').agg({'Sales': 'sum', 'Profit': 'sum'}).reset_index()
plt.figure(figsize=(10, 6))
plt.plot(sales_profit_trend['Year'], sales_profit_trend['Sales'], marker='o', label='Sales')
plt.plot(sales_profit_trend['Year'], sales_profit_trend['Profit'], marker='o', label='Profit')
plt.title('Sales and Profit Trends Over the Years')
plt.xlabel('Year')
plt.ylabel('Amount')
plt.legend()
plt.grid(True)
plt.show()
category_sales = df.groupby(['Year', 'Category']).agg({'Sales': 'sum'}).reset_index()
category_sales['Sales Growth'] = category_sales.groupby('Category')['Sales'].pct_change() * 100
category_most_growth = category_sales.groupby('Category').agg({'Sales Growth': 'mean'}).idxmax()[0]
print("\n Category having most growth in sales over past years are:", category_most_growth)

#7(ii)
top_customers_orders = df['EmailID'].value_counts().nlargest(5)
print("Top 5 customers based on number of orders placed:")
print(top_customers_orders)
top_customers_sales = df.groupby('EmailID')['Sales'].sum().nlargest(5)
print("\nTop 5 customers based on total sales generated:")
print(top_customers_sales)
df['Order Date'] = pd.to_datetime(df['Order Date'])
df_sorted = df.sort_values(by=['EmailID', 'Order Date'])
df_sorted['Time_Diff'] = df_sorted.groupby('EmailID')['Order Date'].diff()
average_time_between_orders = df_sorted.groupby('EmailID')['Time_Diff'].mean().dropna()
print("\nAverage time between orders for each customer:")
print(average_time_between_orders)

"""#7(iii)
1.Optimizing the supply chain based on insights from sales velocity and order fulfillment data involves improving efficiency, reducing costs, and enhancing customer satisfaction. Here are some strategies that can be implemented:
Demand Forecasting: Utilize historical sales data and sales velocity trends to forecast future demand accurately. This can help in optimizing inventory levels, ensuring the right amount of stock is available to meet customer demand while minimizing excess inventory and associated carrying costs.
Inventory Management: Implement just-in-time (JIT) inventory management techniques to minimize inventory holding costs and improve inventory turnover. Monitor sales velocity and adjust inventory levels accordingly to avoid stockouts and overstock situations.
Supplier Collaboration: Collaborate closely with suppliers to streamline the supply chain process. Share sales velocity data and demand forecasts with suppliers to enable them to better plan production schedules and ensure timely delivery of raw materials or finished goods.
Order Fulfillment Efficiency: Optimize order fulfillment processes to reduce lead times and improve order accuracy. Implement automation and technology solutions such as barcode scanning, RFID tracking, and order management systems to streamline order processing and reduce errors.

2.The geographic distribution of sales can be influenced by various underlying factors, and understanding these factors is crucial for informing targeted marketing strategies. Here are some factors that contribute to the geographic distribution of sales and how insights from sales data can inform marketing strategies:
Demographic and Socioeconomic Factors:
Demographic characteristics such as age, gender, income level, education, and occupation can influence consumer behavior and purchasing preferences.
Socioeconomic factors such as urbanization, population density, and employment rates can also impact consumer spending patterns.
Insights from sales data can help identify regions with specific demographic profiles and tailor marketing messages and product offerings to resonate with the target audience in those regions.
Market Demand and Preferences:
Geographic variations in market demand and consumer preferences play a significant role in shaping sales patterns.
Analyzing sales data can reveal which products or categories are popular in different regions and identify opportunities to capitalize on existing demand or introduce new products tailored to local preferences.
"""



"""3.Identifying the patterns with this much of know how is bit diificult , the data needs some machine learning concepts . The models will identify the patterns among the data. We can use several machine learning models like Random Forest, Decesion Tree , Linear Regression."""

