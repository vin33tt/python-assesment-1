# -*- coding: utf-8 -*-
"""Internal Assesment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QglnezOG6GmFD-07hvs1V68b2_CjZ1Wa
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import OneHotEncoder
from scipy import stats
import numpy as np

data=pd.read_csv('/content/expenses.csv')
data

data.describe()

data.isnull().sum()

import seaborn as sns
import matplotlib.pyplot as plt
fig, axs = plt.subplots(3, figsize=(10, 15))

sns.boxplot(data['age'], ax=axs[0]).set_title('Age Distribution')
sns.boxplot(data['bmi'], ax=axs[1]).set_title('BMI Distribution')
sns.boxplot(data['charges'], ax=axs[2]).set_title('Charges Distribution')

plt.tight_layout()
plt.show()

z_scores = stats.zscore(data['charges'])
abs_z_scores = np.abs(z_scores)
filtered_entries = (abs_z_scores < 3)
data_cleaned = data[filtered_entries]
data_cleaned

encoder = OneHotEncoder(sparse=False, drop='first')
categorical_columns = ['sex', 'smoker', 'region']
encoded_data = encoder.fit_transform(data_cleaned[categorical_columns])
encoded_df = pd.DataFrame(encoded_data, columns=encoder.get_feature_names_out(categorical_columns))

data_final = data_cleaned.drop(categorical_columns, axis=1).reset_index(drop=True)
data_final = pd.concat([data_final, encoded_df], axis=1)
data_final

X = data_final.drop('charges', axis=1)
y = data_final['charges']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

X_train.shape

y_train.shape

model = LinearRegression()
model.fit(X_train, y_train)

predictions = model.predict(X_test)
mse = mean_squared_error(y_test, predictions)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, predictions)

print(f'Mean Squared Error: {mse}')
print(f'Root Mean Squared Error: {rmse}')
print(f'R^2 Score: {r2}')



























1.1 Problem Statement:
Understanding and predicting health insurance costs is crucial for various stakeholders, including insurance companies, policyholders, and healthcare providers. The 'Expenses Dataset' offers an opportunity to explore how different factors like age, BMI, smoking status, and region influence insurance costs.
1.2 Dataset:
The 'Expenses Dataset' contains information on individuals, including their age, sex, body mass index (BMI), number of children, smoking status, region, and insurance charges.
1.3 Features Description:
• Age: Numeric, representing the age of the insured individual.
Sex: Categorical, the gender of the insured (male/female).
BMI: Numeric, Body Mass Index.
Children: Numeric, the number of children/dependents covered by the insurance.
Smoker: Categorical, indicating whether the insured is a smoker.
Region: Categorical, the geographical region of the insured.
• Charges: Numeric, the insurance cost billed to the individual (Target Variable).
1.4 Objective:
The objective of this analysis is to apply Linear Regression to predict 'Charges' using the dataset's features. This predictive model aims to uncover the most influential factors affecting insurance costs.
1.5 Task:
1. Handling Missing Values and Outliers:
Check for and address any missing values. Identify and manage outliers in the data.
2. Encoding Categorical Data:
If there are any categorical predictors, encode them appropriately.
3. Feature Selection and Data Cleaning:
• Analyze the features to determine their relevance for prediction. Perform necessary data cleaning steps like removing duplicates or irrelevant features.
4. Data Splitting:
• Split the dataset into training and testing sets to ensure robust model evaluation.
5. Model Development and Training:
Construct and train a Linear Regression model. Introduce the concept of the Mean Squared Error (also called the Cost Function) and Gradient Descent as the method for minimizing the cost function. Discuss the importance of the Learning Rate and how it affects convergence. Explain the role of Derivatives and Partial Derivatives in optimizing the model.
6. Model Evaluation:
Evaluate the model using metrics such as Mean Squared Error, R-squared, and RMSE.
1.6 Expected Outcome:
Develop a reliable predictive model for insurance charges, offering insights into key factors driving insurance costs.



2.1 Problem Statement:
In the dynamic and competitive field of hospitality, predicting the status of hotel bookings is vital for managing reservations, occupancy rates, and customer service. The 'Hotel Booking Prediction' dataset presents the challenge of classifying booking statuses (e.g., Canceled, Not_Canceled) based on various customer and reservation attributes. The task is to apply Logistic Regression or Decision Tree, fundamental classification techniques, to effectively predict the booking status.
2.2 Dataset:
The 'Hotel Booking Prediction' dataset contains data with features representing customer demographics, reservation details, and other relevant information like the number of adults and children, type of meal, room type, lead time, and booking status.
2.3 Features Description:
• Booking_ID: Identifier, unique ID for each booking.
Number of Adults: Numeric, the number of adults in the booking.
Number of Children: Numeric, the number of children in the booking.
Number of Weekend Nights: Numeric, the number of nights booked during the weekend.
Number of Week Nights: Numeric, the number of nights booked during weekdays.
• Type of Meal: Categorical, the type of meal plan selected (e.g., Meal Plan 1, Not Selected).
Car Parking Space: Binary (0 or 1), whether a car parking space is required.
Room Type: Categorical, the type of room booked (e.g., Room_Type 1).
Lead Time: Numeric, the number of days between the booking and the stay.
Market Segment Type: Categorical, the market segment of the
booking (e.g., Online, Offline).
Repeated: Binary (0 or 1), whether the customer is a repeat customer.
P-C: Binary (0 or 1), specific binary attribute relevant to the booking.
P-not-C: Binary (0 or 1), specific binary attribute relevant to the booking.
• Average Price: Numeric, the average price of the booking.
• Special Requests: Numeric, the number of special requests made by the customer.
Date of Reservation: Date, the date on which the booking was made.
• Booking Status: Categorical, the status of the booking (e.g., Canceled,
Not_Canceled).
2.4 Objective:
The goal is to develop a Logistic Regression or Decision Tree model that can accurately predict the booking status of a hotel reservation based on various attributes. This model serves as a foundational tool for classification in the field of hospitality management and for educational purposes in machine learning.
2.5 Tasks:
1. Handling Missing Values and Outliers:
Check for and address any missing values. Identify and manage outliers in the data.
2. Encoding Categorical Data:
Encode categorical predictors like room type, meal type, and booking status appropriately.
3. Feature Selection and Data Cleaning:
• Analyze the features to determine their relevance in predicting booking status. Perform necessary data cleaning steps like removing duplicates or irrelevant features.
4. Data Splitting:
• Split the dataset into training and testing sets to ensure robust model evaluation.
5. Model Development and Training:
Develop a Logistic Regression or Decision Tree model to predict booking status. Explain the Sigmoid Function and its role in Logistic Regression for converting predictions to probabilities.
6. Model Evaluation:
Evaluate the model's performance using classification metrics such as accuracy, precision, recall, and Fl-score. Analyze the confusion matrix to understand the model's strengths and weaknesses in classifying each booking status.
2.6 Expected Outcome:
Through this analysis, the aim is to build a robust classification model using Logistic Regression or Decision Tree algorithm to accurately predict hotel booking statuses.